jwt.keys.key-1.private-key=classpath:private_key.pem
jwt.keys.key-1.public-key=classpath:public.pem
logbook.strategy=body-only-if-status-at-least
logging.level.lol.maki.dev.authorization.AuthorizationApplication=debug
logging.level.org.springframework.security.web.DefaultRedirectStrategy=debug
logging.level.org.springframework.security=info
management.endpoints.web.exposure.include=info,health,prometheus,sbom
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.observations.enable.spring.security=false
management.tracing.sampling.probability=1.0
server.error.include-message=always
server.http2.enabled=true
server.port=9000
spring.application.name=authorization
spring.docker.compose.enabled=false
spring.docker.compose.lifecycle-management=start_only
spring.mustache.check-template-location=false
spring.mustache.servlet.expose-request-attributes=true
spring.mustache.servlet.expose-session-attributes=true
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.authorization-grant-types=authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.client-id=dex-example-app
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.client-secret={noop}dex
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.post-logout-redirect-uris=http://localhost:5555
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.redirect-uris=http://localhost:5555/callback
spring.security.oauth2.authorizationserver.client.dex-example-app.registration.scopes=openid,profile,email
spring.security.oauth2.authorizationserver.client.dex-example-app.require-authorization-consent=false
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.authorization-grant-types=authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.client-id=todo-frontend
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.client-secret={noop}secret
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.post-logout-redirect-uris=http://localhost:8080
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.redirect-uris=http://localhost:8080/login/oauth2/code/todo-frontend
spring.security.oauth2.authorizationserver.client.todo-frontend.registration.scopes=openid,todo:read,todo:write
spring.security.oauth2.authorizationserver.client.todo-frontend.require-authorization-consent=false
spring.security.oauth2.authorizationserver.client.admin.registration.client-id=admin
spring.security.oauth2.authorizationserver.client.admin.registration.client-secret={noop}changeme
spring.security.oauth2.authorizationserver.client.admin.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.admin.registration.authorization-grant-types=client_credentials
spring.security.oauth2.authorizationserver.client.admin.registration.scopes=todo:read,todo:write
spring.security.user.name=john@example.com
spring.security.user.password=password
